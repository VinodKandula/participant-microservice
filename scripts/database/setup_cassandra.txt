------------------------
-- Show all keyspaces --
------------------------

DESCRIBE keyspaces;

-------------------------
-- Create the keyspace --
-------------------------

CREATE KEYSPACE IF NOT EXISTS participant
WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };

-----------------------
-- Use the keyspace  --
-----------------------

use participant;

--------------------------
-- Create address type  --
--------------------------

CREATE TYPE IF NOT EXISTS address (
  address_line1 text,
  address_line2 text,
  city text,
  country text,
  postal_code text
);

-----------------------
-- Create name type  --
-----------------------

CREATE TYPE IF NOT EXISTS name (
  first_name text,
  middle_name text,
  last_name text,
  suffix text
);

---------------------
-- Show all types  --
---------------------

describe types;

-----------------------
-- Create the table  --
-----------------------

CREATE TABLE IF NOT EXISTS participant_details_by_country (
  country_lc text,
  city_lc text,
  address_line1_lc text,
  last_name_lc text,
  participant_id timeuuid,
  first_name text,
  middle_name text,
  last_name text,
  suffix text,
  address_line1 text,
  address_line2 text,
  city text,
  country text,
  postal_code text,
  email text,
  contact_number text,
  added_date timestamp,
  added_by text,
  updated_date timestamp,
  updated_by text,
  PRIMARY KEY ((country_lc), city_lc, address_line1_lc, last_name_lc, participant_id)
);

CREATE TABLE IF NOT EXISTS participant_details_by_id (
  participant_id timeuuid,
  first_name text,
  middle_name text,
  last_name text,
  suffix text,
  address_line1 text,
  address_line2 text,
  city text,
  country text,
  postal_code text,
  email text,
  contact_number text,
  added_date timestamp,
  added_by text,
  updated_date timestamp,
  updated_by text,
  PRIMARY KEY ((participant_id))
);

-- Below is the UDT version (which Spring Data does not currently support)
CREATE TABLE IF NOT EXISTS participant_details_by_country (
  country_lc text,
  city_lc text,
  address_line1_lc text,
  last_name_lc text,
  participant_id timeuuid,
  name frozen<name>,
  address frozen<address>,
  email text,
  contact_number text,
  added_date timestamp,
  added_by text,
  updated_date timestamp,
  updated_by text,
  PRIMARY KEY ((country_lc), city_lc, address_line1_lc, last_name_lc, participant_id)
);

---------------------------
-- Add full text search  --
---------------------------

ALTER TABLE participant_details_by_id ADD lucene text; -- Dummy column needed if using prior to Cassandra 3.0

CREATE CUSTOM INDEX participant_details_by_id_index ON participant_details_by_id (lucene)  -- Index is linked to the dummy column
USING 'com.stratio.cassandra.lucene.Index'
WITH OPTIONS = {
   'refresh_seconds': '1',
   'schema': '{
      fields: {
         country: {type: "text"},
         city: {type: "text"},
         address_line1: {type: "text"},
         last_name: {type: "text"},
         participant_id: {type: "uuid"}
      }
   }'
};

----------------------
-- Show all tables  --
----------------------

describe tables;

-----------------------
-- Show all Indexes  --
-----------------------

SELECT column_name, index_name, index_options, index_type, component_index
FROM system.schema_columns
WHERE keyspace_name='participant';